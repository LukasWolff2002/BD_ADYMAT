<%= form_with(model: rental, local: true) do |form| %>
  <% if rental.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(rental.errors.count, "error") %> impidieron guardar el arriendo:</h2>
      <ul>
        <% rental.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Opci√≥n manual -->
  <div id="select_machinery_section">
    <%= form.label :machinery_id, "Maquinaria" %>
    <%= form.collection_select :machinery_id, Machinery.all, :id, :nombre, prompt: "Seleccione una maquinaria" %>
    <p style="font-size: 0.9em; color: gray;">O escanee el c√≥digo QR de la maquinaria</p>
  </div>

  <!-- Escaneo QR -->
  <div>
    <label>Escanear c√≥digo QR:</label>
    <div id="qr-reader" style="width: 300px;"></div>
    <div id="qr-result" style="color: green; font-weight: bold;"></div>
  </div>

  <!-- Campo oculto obligatorio -->
  <%= form.hidden_field :machinery_id, id: "rental_machinery_id" %>

  <div>
    <%= form.label :fecha_inicio %>
    <%= form.date_field :start_date %>
  </div>

  <div>
    <%= form.label :fecha_fin %>
    <%= form.date_field :end_date %>
  </div>

  <div id="rental_warning" style="color: red; font-weight: bold;"></div>

  <div>
    <%= form.label :metodo_de_pago %>
    <%= form.select :payment_method, ["Efectivo", "Transferencia", "Factura", "Debito", "Boleta"], prompt: "Seleccione un medio de pago" %>
  </div>

  <div>
    <%= form.label :tarifa %>
    <%= form.select :rate, ["D√≠a", "Semana", "Mes"], prompt: "Seleccione una tarifa" %>
  </div>

  <div>
    <%= form.label :descuento %>
    <%= form.number_field :discount, step: 0.01 %>
  </div>

  <div>
    <%= form.label :flete %>
    <%= form.number_field :freight, step: 0.01 %>
  </div>

  <div>
    <%= form.label :total %>
    <%= form.number_field :total_amount, step: 0.01 %>
  </div>

  <div>
    <%= form.submit %>
  </div>
<% end %>

<!-- Scripts -->
<script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const startDateInput = document.querySelector("#rental_start_date");
    const endDateInput = document.querySelector("#rental_end_date");
    const machinerySelect = document.querySelector("#rental_machinery_id");
    const warningDiv = document.getElementById("rental_warning");
    const selectSection = document.getElementById("select_machinery_section");

    const machineryHoursMap = {
      <% Machinery.all.each do |m| %>
        "<%= m.id %>": <%= m.horas_disponibles || 0 %>,
      <% end %>
    };

    function checkRentalHours() {
      const startDate = new Date(startDateInput.value);
      const endDate = new Date(endDateInput.value);
      const machineryId = machinerySelect.value;

      if (!startDate || !endDate || !machineryId) {
        warningDiv.textContent = "";
        return;
      }

      const days = Math.floor((endDate - startDate) / (1000 * 60 * 60 * 24)) + 1;
      const totalHours = days * 8;
      const availableHours = machineryHoursMap[machineryId];

      if (totalHours > availableHours) {
        warningDiv.textContent = `‚ö†Ô∏è El arriendo requiere ${totalHours}h pero la maquinaria solo tiene ${availableHours}h disponibles.`;
      } else {
        warningDiv.textContent = "";
      }
    }

    [startDateInput, endDateInput, machinerySelect].forEach(input => {
      input.addEventListener("change", checkRentalHours);
    });

    // QR Code logic
    function onScanSuccess(decodedText) {
      let token = decodedText;

      // Si el QR contiene una URL, extrae el token
      try {
        const url = new URL(decodedText);
        token = url.pathname.split("/").pop();
      } catch (e) {
        // No es URL, usar directamente
      }

      fetch(`/maquinarias/buscar_por_qr?qr_token=${token}`)
        .then(response => response.json())
        .then(data => {
          if (data.id) {
            machinerySelect.value = data.id;
            machinerySelect.dispatchEvent(new Event("change"));
            document.getElementById("qr-result").innerText = `‚úÖ Maquinaria seleccionada: ${data.nombre}`;
            selectSection.style.display = "none";
          } else {
            document.getElementById("qr-result").innerText = "‚ö†Ô∏è C√≥digo QR no v√°lido o maquinaria no encontrada.";
          }
        })
        .catch(() => {
          document.getElementById("qr-result").innerText = "‚ö†Ô∏è Error al buscar maquinaria.";
        });
    }

    // üí° Esta l√≠nea faltaba:
    const qrScanner = new Html5QrcodeScanner("qr-reader", { fps: 10, qrbox: 250 });
    qrScanner.render(onScanSuccess);
  });
</script>

